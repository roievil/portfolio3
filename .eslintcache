[{"C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\index.js":"1","C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\blocks.js":"2","C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\Home.js":"3","C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\store.js":"4"},{"size":3722,"mtime":1664291034547,"results":"5","hashOfConfig":"6"},{"size":2088,"mtime":1664290354432,"results":"7","hashOfConfig":"6"},{"size":6078,"mtime":1664290456379,"results":"8","hashOfConfig":"6"},{"size":136,"mtime":1664287139423,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"gl4q6t",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\index.js",["21","22","23"],"import { render } from \"react-dom\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Canvas, useThree } from \"@react-three/fiber\";\nimport { Html } from \"@react-three/drei\";\nimport { Block } from \"./blocks\";\nimport { Shapes, Categories, Box } from \"./Home\";\nimport state from \"./store\";\nimport \"./styles.css\";\n\nfunction HtmlContent({ className, style, children, portal }) {\n  const { size } = useThree();\n  return (\n    <Html\n      portal={portal}\n      style={{\n        position: \"absolute\",\n        top: -size.height / 2,\n        left: -size.width / 2,\n        width: size.width,\n        height: size.height,\n      }}\n    >\n      <div className={className} style={style}>\n        {children}\n      </div>\n    </Html>\n  );\n}\n\nfunction App() {\n  const [events, setEvents] = useState();\n  const domContent = useRef();\n  const scrollArea = useRef();\n  const onScroll = (e) => (state.top.current = e.target.scrollTop);\n  useEffect(() => void onScroll({ target: scrollArea.current }), []);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", function (event) {\n      if (event.code == \"Escape\" || event.code == \"Enter\") {\n        console.log(\"state from index.js\", state);\n      }\n    });\n  }, []);\n  console.log(\"state from index.js\", state);\n  return (\n    <>\n      <Canvas\n        colorManagement\n        gl={{ alpha: false, antialias: true }}\n        camera={{ position: [0, 0, 4.5], fov: 50, near: 0.1, far: 100 }}\n        onCreated={({ gl, events }) => {\n          gl.setClearColor(\"white\");\n          gl.toneMappingExposure = 2.5;\n          gl.toneMappingWhitePoint = 1;\n          // Export canvas events, we will put them onto the scroll area\n          setEvents(events);\n        }}\n      >\n        <Block factor={1.5} offset={0}>\n          <Shapes />\n          <HtmlContent portal={domContent}>\n            <div className=\"menu left\" style={{ top: \"2.55rem\" }}>\n              <h2 style={{ fontSize: \"1.5em\", top: \"4rem\" }}>\n                Olivier Glorieux\n              </h2>\n            </div>\n            <div className=\"menu right\">\n              <span>\n                <a href=\"#section4\">Contact</a>\n              </span>\n            </div>\n            <div className=\"menu middle\">\n              <span>\n                <a href=\"#section1\">Maker</a>\n              </span>\n              <span>\n                <a href=\"#section2\">Formateur</a>\n              </span>\n              <span>\n                <a href=\"#section3\">Programmeur</a>\n              </span>\n            </div>\n            <div className=\"jumbo\">\n              <h1>\n                browser\n                <br />\n                based\n                <br />\n                modeling.\n              </h1>\n              {/* <Categories /> */}\n            </div>\n          </HtmlContent>\n        </Block>\n\n        <Block factor={1.5} offset={1}>\n          <Box />\n          <Html center portal={domContent}>\n            <h2 id=\"section1\">Maker</h2>\n          </Html>\n        </Block>\n\n        <Block factor={1.5} offset={2}>\n          <Box />\n          <Html center portal={domContent}>\n            <h2 id=\"section2\">Formateur</h2>\n          </Html>\n        </Block>\n\n        <Block factor={-2} offset={4}>\n          <Box scale={[2, 2, 2]} />\n          <Html center portal={domContent}>\n            <h2 id=\"section3\">Programmeur</h2>\n          </Html>\n        </Block>\n      </Canvas>\n\n      <div\n        className=\"scrollArea\"\n        ref={scrollArea}\n        onScroll={onScroll}\n        {...events}\n      >\n        <div style={{ position: \"sticky\", top: 0 }} ref={domContent} />\n        <div style={{ height: `${state.pages * 100}vh` }} />\n      </div>\n    </>\n  );\n}\n\nrender(<App />, document.querySelector(\"#root\"));\n","C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\blocks.js",[],["24","25"],"C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\Home.js",["26","27","28"],"import React, { useRef, useMemo, useEffect, useState } from \"react\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\n\n/**\n * Déclaration des éléments à intégrer à index.js\n */\n\n/**\n * Crée une ref pour accéder impérativement à un composant\n *  et fait surnager ce composant (géométrie) dans l'axe Y (Z dans rhino)\n * @param {*} factor\n * @param {*} fn\n * @param {*} cb\n * @returns\n */\nfunction useWobble(factor = 1, fn = \"sin\", cb) {\n  const ref = useRef();\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime();\n    ref.current.position.y = Math[fn](t) * factor;\n    if (cb) cb(t, ref.current);\n  });\n  return ref;\n}\n\nexport function Box(props) {\n  const [hovered, set] = useState(false);\n  const ref = useWobble(0.5, \"cos\");\n  useFrame(\n    () =>\n      (ref.current.rotation.x =\n        ref.current.rotation.y =\n        ref.current.rotation.z +=\n          0.01)\n  );\n  return (\n    <mesh\n      ref={ref}\n      {...props}\n      onPointerOver={() => set(true)}\n      onPointerOut={() => set(false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" />\n      <meshStandardMaterial\n        attach=\"material\"\n        color={hovered ? \"hotpink\" : \"white\"}\n      />\n      {/* <ContactShadows\n        position={[0, 0, 0]}\n        scale={10}\n        far={3}\n        blur={3}\n        rotation={[Math.PI / 2, 0, 0]}\n        color={colorized ? \"#2A8AFF\" : \"black\"}\n      /> */}\n    </mesh>\n  );\n}\n\n/**\n * Ensemble des formes à ajouter au fond (canvas)\n * et avec la lumière\n * @returns\n */\nexport function Shapes() {\n  const {\n    viewport: { width, height },\n  } = useThree();\n  const ringSize = Math.max(3, width / 2);\n  const crossSize = 0.7;\n  return (\n    <>\n      <Ring\n        position={[-width * 0.8, height * -3, -5]}\n        scale={[ringSize, ringSize, 1]}\n      />\n      <Cross\n        position={[-width / 2.5, height / 8, -1]}\n        scale={[crossSize, crossSize, 1]}\n        rotation={[0, 0, Math.PI / 4]}\n      />\n      <Minus\n        position={[width / 3, -height / 3.5, -2]}\n        scale={[0.8, 0.8, 0.8]}\n        rotation={[0, 0, Math.PI / 10]}\n      />\n      <group\n        rotation={[Math.PI / 8, 0, 0]}\n        position={[-width / 4, -height / 6, 0]}\n      >\n        <Box scale={[0.8, 0.8, 0.8]} />\n        <Box position={[width / 1.5, height / 4, -3]} scale={[0.5, 0.5, 0.5]} />\n        <Lights />\n      </group>\n    </>\n  );\n}\n\nfunction Ring(props) {\n  return (\n    <mesh {...props}>\n      <ringBufferGeometry attach=\"geometry\" args={[1, 1.4, 64]} />\n      <meshBasicMaterial\n        attach=\"material\"\n        color=\"#FFF9BE\"\n        transparent\n        opacity={1}\n        toneMapped={false}\n      />\n    </mesh>\n  );\n}\n\nfunction Cross(props) {\n  const inner = useRef();\n  const ref = useWobble(0.1, \"sin\", () => (inner.current.rotation.z += 0.001));\n  return (\n    <group ref={ref}>\n      <group ref={inner} {...props}>\n        <mesh>\n          <planeBufferGeometry attach=\"geometry\" args={[2, 0.5]} />\n          <meshBasicMaterial\n            attach=\"material\"\n            color=\"#FFEDDD\"\n            toneMapped={false}\n          />\n        </mesh>\n        <mesh position={[0, -0.625, 0]}>\n          <planeBufferGeometry attach=\"geometry\" args={[0.5, 0.75]} />\n          <meshBasicMaterial\n            attach=\"material\"\n            color=\"#FFEDDD\"\n            toneMapped={false}\n          />\n        </mesh>\n        <mesh position={[0, 0.625, 0]}>\n          <planeBufferGeometry attach=\"geometry\" args={[0.5, 0.75]} />\n          <meshBasicMaterial\n            attach=\"material\"\n            color=\"#FFEDDD\"\n            toneMapped={false}\n          />\n        </mesh>\n      </group>\n    </group>\n  );\n}\n\nfunction Minus(props) {\n  const ref = useWobble(0.1, \"sin\");\n  return (\n    <group ref={ref}>\n      <group {...props}>\n        <mesh>\n          <planeBufferGeometry attach=\"geometry\" args={[2, 0.7]} />\n          <meshBasicMaterial\n            attach=\"material\"\n            color=\"#DEF5FF\"\n            toneMapped={false}\n            transparent\n            opacity={0.7}\n          />\n        </mesh>\n      </group>\n    </group>\n  );\n}\n\nfunction Lights() {\n  return (\n    <>\n      <ambientLight intensity={0.2} />\n      <pointLight\n        position={[7, -5, 10]}\n        intensity={1}\n        angle={0.3}\n        penumbra={1}\n      />\n      <pointLight position={[1, -1, -5]} intensity={0.5} />\n    </>\n  );\n}\n\n/**\n *\n * Animation des liens en home\n *\n * @param {*} param0\n * @returns\n */\nexport function Categories({ time = 3000 }) {\n  const [index, set] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => set((index + 1) % 2), time);\n    return () => clearInterval(interval);\n  }, [index]);\n  const cats = useMemo(\n    () => [\n      {\n        npm: \"headless\",\n        description: \"programmatic CAD workflow for the web.\",\n      },\n      { npm: \"react\", description: \"interactive CAD workflow for React.\" },\n    ],\n    []\n  );\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current.style.animation = \"none\";\n    void ref.current.offsetHeight;\n    ref.current.style.animation = `changewidth ${time / 1000}s linear`;\n  }, [index]);\n\n  return (\n    <p style={{ height: 70 }}>\n      <a href=\"#\" style={{ width: 190 }} onClick={() => set((index + 1) % 2)}>\n        <div\n          ref={ref}\n          className=\"progress\"\n          style={{\n            position: \"absolute\",\n            left: 0,\n            bottom: 0,\n            height: 2,\n            opacity: 0.5,\n            background: \"#ffa5a5\",\n          }}\n        />\n        @buerli.io/\n        {cats.map(({ npm }, i) => (\n          <span\n            key={i}\n            hidden={i !== index || undefined}\n            className=\"transition vertical\"\n          >\n            {npm}\n          </span>\n        ))}\n      </a>\n      is a non-manifold,\n      <br />\n      {cats.map(({ description }, i) => (\n        <span\n          key={i}\n          hidden={i !== index || undefined}\n          className=\"transition horizontal\"\n          style={{ width: \"100%\", left: 0 }}\n        >\n          {description}\n        </span>\n      ))}\n    </p>\n  );\n}\n","C:\\Users\\roiev\\source\\repos\\portfolio\\portfolio3\\src\\store.js",[],{"ruleId":"29","severity":1,"message":"30","line":6,"column":18,"nodeType":"31","messageId":"32","endLine":6,"endColumn":28},{"ruleId":"33","severity":1,"message":"34","line":38,"column":22,"nodeType":"35","messageId":"36","endLine":38,"endColumn":24},{"ruleId":"33","severity":1,"message":"34","line":38,"column":48,"nodeType":"35","messageId":"36","endLine":38,"endColumn":50},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":196,"column":6,"nodeType":"43","endLine":196,"endColumn":13,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"42","line":213,"column":6,"nodeType":"43","endLine":213,"endColumn":13,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":217,"column":7,"nodeType":"48","endLine":217,"endColumn":79},"no-unused-vars","'Categories' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array.","ArrayExpression",["51"],["52"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},{"desc":"53","fix":"55"},"Update the dependencies array to be: [index, time]",{"range":"56","text":"57"},{"range":"58","text":"57"},[4644,4651],"[index, time]",[5089,5096]]